name: CI/CD Pipeline 

on:
  push:
    branches:
      - master

env:
  # Define variables used throughout the workflow
  IMAGE_NAME: devops-release-flask-chart
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY_BASE: docker.io/
  HELM_CHART_PATH: ./flask-chart # Adjust this path if your chart is elsewhere

jobs:

  ci:
    runs-on: ubuntu-latest
    environment: Finkraft
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install flake8 pytest
          pip install -r requirements.txt

      - name: Lint & Test Application Code
        run: |
          echo "Running Linting..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "Running Pytest..."
          # Replace 'pytest' with your actual test command if different
          pytest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_BASE }}${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.REGISTRY_BASE }}${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

    outputs:
      # Pass the full image tag to the CD stage
      image_tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  cd:
    needs: ci # Ensures CI must complete successfully before deployment starts
    runs-on: ubuntu-latest
    environment: Finkraft
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up Kubeconfig for Minikube Cluster
        uses: azure/k8s-set-context@v4
        with:
          # Uses the Kubeconfig Secret to authenticate with the cluster
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: üì¶ Install and Configure Helm
        uses: azure/setup-helm@v4

      - name: üöÄ Deploy Application with Helm
        run: |
          # 1. Update the Helm chart values with the newly built image tag

          
          # 2. Use 'helm upgrade --install' for idempotent deployment
          helm upgrade --install devops-release-flask-chart ${{ env.HELM_CHART_PATH }} \
            --namespace default \
            --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --atomic \
            --timeout 5m
